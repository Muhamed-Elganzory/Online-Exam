{"version":3,"file":"auth-api.mjs","sources":["../../../projects/auth-api/src/lib/enums/auth-api.endpoints.ts","../../../projects/auth-api/src/lib/adaptor/auth-api.adaptor.ts","../../../projects/auth-api/src/lib/token/api-token.ts","../../../projects/auth-api/src/lib/auth-api.service.ts","../../../projects/auth-api/src/public-api.ts","../../../projects/auth-api/src/auth-api.ts"],"sourcesContent":["export class AuthApiEndpoints {\n\n  static SIGNIN: string = 'auth/signin';\n  static SIGNUP: string = 'auth/signup';\n  static FORGET_PASSWORD: string = 'auth/forgotPassword';\n  static VERIFY_CODE: string = 'auth/verifyResetCode';\n  static RESET_PASSWORD: string = 'auth/resetPassword';\n  static CHANGE_PASSWORD: string = 'auth/changePassword';\n  static DELETE_ACCOUNT: string = 'auth/deleteMe';\n  static EDITE_PROFILE: string = 'auth/editProfile';\n  static LOGOUT: string = 'auth/logout';\n  static GET_LOGGED_USER: string = 'auth/profileData';\n\n}\n","import { Injectable } from '@angular/core';\nimport {Adaptor} from '../interfaces/adaptor.interface';\nimport {SignInUpApiRes, SignInUpRes} from '../interfaces/auth/auth-api-res.interface';\nimport {SignInUpApiErr, SignInUpErr} from '../interfaces/auth/auth-api-err.interface';\nimport {ResetPasswordRes} from '../interfaces/resetPassword/reset-password-api.interface';\nimport {ForgetPasswordRes} from '../interfaces/forgetPassword/forget-password-api.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthAPIAdaptorService implements Adaptor {\n\n  constructor() { }\n\n  adaptRes(data: SignInUpApiRes): SignInUpRes {\n    return {\n      message: data.message,\n      token: data.token,\n      userEmail: data.user.email,\n    };\n  }\n\n  adaptErr(data: SignInUpApiErr): SignInUpErr {\n    return {\n      message: data.error.message,\n    }\n  }\n\n  /**\n   * It used of\n   *   - FORGET PASSWORD\n   *   - VERIFY CODE\n   * @param data\n   */\n  adaptForgetPassRes(data: any): any {\n    return {\n      message: data.message,\n      info: data.info,\n    }\n  }\n\n  adapt_VerifyCode_Err(data: any): any {\n    return {\n      message: data.message\n    }\n  }\n\n  adaptVerifyRes(data: any): any {\n    return {\n      message: data.message,\n    }\n  }\n\n  adaptResetPass(data: ResetPasswordRes): ResetPasswordRes {\n    return {\n      message: data.message,\n      token: data.token,\n    };\n  }\n\n\n}\n","import { InjectionToken } from '@angular/core';\n\nexport const API_BASE_URL = new InjectionToken <string> ('API_BASE_URL', {\n  providedIn: 'root',\n  factory: (): string => 'https://exam.elevateegy.com/api/v1/'\n});\n\n/*\nexport interface BaseUrlConfig {\n  baseURL: string;\n}\n\n\n    export const API_BASE_URL = new InjectionToken <string> ('API_BASE_URL');\n\n    const injector: Injector = Injector.create({\n      providers: [{\n        provide: API_BASE_URL, useValue: 'https://exam.elevateegy.com/api/v1/',\n      }]\n    })\n */\n\n/*\nfactory: () =>({\n    LOGIN: 'https://exam.elevateegy.com/api/v1/auth/signin',\n    REGISTER: 'https://exam.elevateegy.com/api/v1/auth/signup',\n    CHANGE_PASSWORD: 'https://exam.elevateegy.com/api/v1/auth/changePassword',\n    DELETE_ACCOUNT: 'https://exam.elevateegy.com/api/v1/auth/deleteMe',\n    EDITE_PROFILE: 'https://exam.elevateegy.com/api/v1/auth/editProfile',\n    LOGOUT: 'https://exam.elevateegy.com/api/v1/auth/logout',\n    GET_LOGGED_USER: 'https://exam.elevateegy.com/api/v1/auth/profileData',\n    FORGET_PASSWORD: 'https://exam.elevateegy.com/api/v1/auth/forgotPassword',\n    VERIFY_CODE: 'https://exam.elevateegy.com/api/v1/auth/verifyResetCode',\n    RESET_PASSWORD: 'https://exam.elevateegy.com/api/v1/auth/resetPassword',\n  })\n */\n","import {inject, Injectable, signal, WritableSignal} from '@angular/core';\nimport {AuthApi} from './base/auth.api.abstract';\nimport {catchError, map, Observable, throwError} from 'rxjs';\nimport {HttpClient} from '@angular/common/http';\nimport {AuthApiEndpoints} from './enums/auth-api.endpoints';\nimport {AuthAPIAdaptorService} from './adaptor/auth-api.adaptor';\nimport {SignInData} from './interfaces/auth/sign-in-data.interface';\nimport {SignInUpRes} from './interfaces/auth/auth-api-res.interface';\nimport {SignInUpApiErr, SignInUpErr} from './interfaces/auth/auth-api-err.interface';\nimport {SignUpData} from './interfaces/auth/sign-up-data.interface';\nimport {ForgetPasswordData} from './interfaces/forgetPassword/forget-password-data.interface';\nimport {ForgetPasswordRes} from './interfaces/forgetPassword/forget-password-api.interface';\nimport {VerifyCodeData} from './interfaces/verifyCode/verify-code.data.interface';\nimport {VerifyCodeRes} from './interfaces/verifyCode/verify-code-api.interface';\nimport {ResetPasswordData} from './interfaces/resetPassword/reset-password-data.interface';\nimport {ResetPasswordRes} from './interfaces/resetPassword/reset-password-api.interface';\nimport {API_BASE_URL} from './token/api-token';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthApiService implements AuthApi {\n\n  private readonly httpClient: HttpClient = inject (HttpClient);\n  private readonly authAPIAdaptorService: AuthAPIAdaptorService = inject (AuthAPIAdaptorService);\n  resetEmail: WritableSignal <string> = signal <string> ('');\n  private readonly apiConfig: string = inject (API_BASE_URL);\n\n  sigIn(data: SignInData): Observable <SignInUpRes> {\n    return this.httpClient.post(this.apiConfig + AuthApiEndpoints.SIGNIN, data).pipe(\n      map((res: any): SignInUpRes => this.authAPIAdaptorService.adaptRes(res)),\n      catchError((err: SignInUpApiErr): Observable <any> => throwError((): SignInUpErr => this.authAPIAdaptorService.adaptErr(err))),\n    );\n  }\n\n  signUp(data: SignUpData): Observable <SignInUpRes> {\n    return this.httpClient.post(this.apiConfig + AuthApiEndpoints.SIGNUP, data).pipe(\n      map((res: any): SignInUpRes => this.authAPIAdaptorService.adaptRes(res)),\n      catchError((err: SignInUpApiErr): Observable <any> => throwError((): SignInUpErr => this.authAPIAdaptorService.adaptErr(err)))\n    );\n  }\n\n  forgetPassword(data: ForgetPasswordData): Observable <ForgetPasswordRes> {\n    return this.httpClient.post(this.apiConfig + AuthApiEndpoints.FORGET_PASSWORD, data).pipe(\n      map((res: any): ForgetPasswordRes => this.authAPIAdaptorService.adaptForgetPassRes(res)),\n      catchError((err: SignInUpApiErr): Observable <any> => throwError((): SignInUpErr => this.authAPIAdaptorService.adaptErr(err)))\n    );\n  }\n\n  resetCode(data: VerifyCodeData): Observable <VerifyCodeRes> {\n    return this.httpClient.post(this.apiConfig + AuthApiEndpoints.VERIFY_CODE, data).pipe(\n      map((res: any): ForgetPasswordRes => this.authAPIAdaptorService.adaptVerifyRes(res)),\n      catchError((err: ForgetPasswordRes): Observable <any> => throwError((): ForgetPasswordRes => this.authAPIAdaptorService.adapt_VerifyCode_Err(err)))\n    );\n  }\n\n  resetPassword(data: ResetPasswordData): Observable <ResetPasswordRes> {\n    return this.httpClient.put(this.apiConfig + AuthApiEndpoints.RESET_PASSWORD, data).pipe(\n      map((res: any): ResetPasswordRes => this.authAPIAdaptorService.adaptResetPass(res)),\n      catchError((err: any): Observable <any> => throwError((): SignInUpErr => this.authAPIAdaptorService.adaptErr(err)))\n    );\n  }\n}\n","/*\n * Public API Surface of auth-api\n */\n\nexport * from './lib/auth-api.service';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}